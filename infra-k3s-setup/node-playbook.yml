---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
     name: "{{ packages }}"
     state: present
     update_cache: yes
    vars:
     packages:
     - apt-transport-https
     - ca-certificates
     - curl
     - gnupg-agent
     - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
     url: https://download.docker.com/linux/ubuntu/gpg
     state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt:
     name: "{{packages}}"
     state: present
     update_cache: yes
    vars:
     packages:
     - docker-ce
     - docker-ce-cli
     - containerd.io
    notify:
     - docker status

  - name: Add user to docker group
    user:
     name: ubuntu
     group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
     name: "{{ item }}"
     fstype: swap
     state: absent
    with_items:
     - swap
     - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command mode=0777

  - name: Generate join command
    command: cat /tmp/join-command
    register: join_command

  - name: Copy the master ip to server location
    copy: src=master_ip dest=/tmp/master_ip mode=0777

  - name: Generate master ip command
    command: cat /tmp/master_ip
    register: master_ip

  #  - name: Install k3s
  #    get_url: url=https://get.k3s.io dest=/tmp/k3s.sh mode=0755

  #  - name: Execute k3s script
  #    shell: /tmp/k3s.sh

  #  - name: Remove k3s script file
  #    file: path=/tmp/k3s.sh state=absent

  - name: Install K3S
    shell: curl -sfL https://get.k3s.io | K3S_URL=https://{{ master_ip.stdout_lines[0] }}:6443 K3S_TOKEN={{ join_command.stdout_lines[0] }} sh -

  - name: Enable and check K3S Service
    systemd:
      name: k3s-agent
      daemon_reload: yes
      state: restarted
      enabled: yes

  handlers:
  - name: docker status
    service: name=docker state=started
